name: Deploy to Gov PaaS

on:
  workflow_dispatch:
  push:
    # branches:
    # - master
    # - FS-389
    # - FS-390

    paths-ignore:
      - '**/README.md'

jobs:
  testing:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
      - name: run unit tests
        run: python -m pip install pytest && python -m pytest .
        env:
          GOV_NOTIFY_API_KEY: ${{secrets.GOV_NOTIFY_API_KEY}}

  deploy_dev:
    needs: testing
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: Deploy to Gov PaaS
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api:      ${{secrets.CF_API}}
          cf_org:      ${{secrets.CF_ORG}}
          cf_space:    ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          command: push funding-service-design-notification-dev  --var GOV_NOTIFY_API_KEY=${{secrets.GOV_NOTIFY_API_KEY}}

  security:
    needs: deploy_dev
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: install dependencies
        run: python -m pip install --upgrade pip && python -m pip install -r requirements-dev.txt
      - name: Bandit
        run: bandit -r ./app
      - name: Safety
        run: safety check
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          target: 'https://funding-service-design-notification-dev.london.cloudapps.digital/'
          allow_issue_writing: False

  deploy_test:
    # TODO: restore this once security check can pass, see https://communities-govuk.slack.com/archives/C02PHBER287/p1664794101631599
    # needs: security
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
      - name: Deploy to Gov PaaS
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api:      ${{secrets.CF_API}}
          cf_org:      ${{secrets.CF_ORG}}
          cf_space:    ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          command: push funding-service-design-notification-test  --var GOV_NOTIFY_API_KEY=${{secrets.GOV_NOTIFY_API_KEY}}

# TODO reinstate performance tests once applicaiton refctoring complete
  run_performance_tests:
    if: ${{ false }}
    needs: deploy_test
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: checkout code
        uses: actions/checkout@main
        with:
          repository: communitiesuk/funding-service-design-performance-tests
          path: ./funding-service-design-performance-tests
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r ./funding-service-design-performance-tests/requirements.txt

      - name: Run performance tests
        run: ls && python -m pip install locust && python -m locust
        working-directory: ./funding-service-design-performance-tests
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: performance-test-report
          path: ./funding-service-design-performance-tests/locust_html_report.html
          retention-days: 5
