name: Deploy to AWS
on:
  workflow_dispatch:
    inputs:
      environment:
        description:  Which AWS Account to use
        type: choice
        required: true
        options:
        - test
        - uat
      run_performance_tests:
        required: false
        default: false
        type: boolean
        description: Run performance tests
      run_e2e_tests:
        required: false
        default: false
        type: boolean
        description: Run e2e tests
  push:
    paths: # Ignore README markdown and only deploy when something in the copilot folder has changed
      - 'copilot/**'
      - '!**/README.md'
  pull_request:
    types:
      - closed # Further protection - only allow this workflow to run automatically on closed pull requests

jobs:
  paketo_build:
    if: github.event.pull_request.merged == true
    permissions:
      packages: write
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/package.yml@main
    with:
      version_to_build: $(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      owner: ${{ github.repository_owner }}
      application: funding-service-design-notification
  pre_deploy_tests:
    if: github.event.pull_request.merged == true
    secrets:
      E2E_PAT: ${{secrets.E2E_PAT}}
      GOV_NOTIFY_API_KEY: ${{secrets.GOV_NOTIFY_API_KEY}}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/pre-deploy.yml@main
    with:
      postgres_unit_testing: false
  copilot_build:
    #if: github.event.pull_request.merged == true
    needs: [pre_deploy_tests, paketo_build]
    concurrency: deploy-${{ inputs.environment || 'test' }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'test' }}
    steps:
    - name: Git clone the repository
      uses: actions/checkout@v3

    - name: Get current date
      id: currentdatetime
      run: echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/GithubCopilotDeploy
        role-session-name: NOTIFICATION_COPILOT_${{ steps.currentdatetime.outputs.datetime }}
        aws-region: eu-west-2

    - name: Install AWS Copilot CLI
      run: |
        curl -Lo aws-copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux && chmod +x aws-copilot && sudo mv aws-copilot /usr/local/bin/copilot

    - name: Inject Git SHA into manifest
      run: |
        yq -i '.variables.GITHUB_SHA = "${{ github.sha }}"'  copilot/fsd-notification/manifest.yml

    - name: Inject replacement image into manifest
      run: |
        yq -i '.image.location = "ghcr.io/communitiesuk/funding-service-design-notification:${{ github.ref_name == 'main' && 'latest' || github.ref_name }}"'  copilot/fsd-notification/manifest.yml

    - name: Copilot deploy
      run: |
        copilot svc deploy --env ${{ inputs.environment || 'test' }}
  post_deploy_tests:
    needs: copilot_build
    secrets:
      E2E_PAT: ${{secrets.E2E_PAT}}
      GOV_NOTIFY_API_KEY: ${{secrets.GOV_NOTIFY_API_KEY}}
    uses: communitiesuk/funding-service-design-workflows/.github/workflows/post-deploy.yml@FS-3337 #main
    with:
      run_performance_tests: ${{ inputs.run_performance_tests }}
      run_e2e_tests: ${{ inputs.run_e2e_tests }}
